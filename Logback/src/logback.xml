<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
	<target>System.out</target><!-- err 是红色-->
		<encoder>
		<!-- 日志输出格式：%d表示日期时间，%-5level：日志级别  ，%c取类 %thread表示线程名(在哪个方法执行)，
			%msg：日志消息，%n是换行符 ，不会用就去百度一下logback的日志格式-->
					<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}[%-5level]  %c [%thread] :%msg%n</pattern>
			</encoder>
	</appender>

	<!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}-%msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<!-- 日志输出路径 -->
		<file>D:/CoderLife/JavaSE-case/Logback/Log.log</file>
		<!-- 指定日志文件拆分和压缩规则 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 通过指定压缩文件的名称，来确定分割文件方式 -->
			<fileNamePattern>D:\CoderLife\JavaSE-case\Logback-data2-%d{yyyy-MM-dd}.log%i.gz	</fileNamePattern>
			<!-- 文件拆分大小 -->
				<maxFileSize>1MB</maxFileSize>
		</rollingPolicy>
	</appender>


	<!-- level:用来设计打印级别，大小写无关：TRACE,DEBUG,INFO,WARN,ERROR,  ALL和OFF,默认debug
	<root>可以包含零个或多个<appender-ref>元素,标识这个输出位置将会被本日志级别控制。
 -->
	<root level="ERROR">
	<!-- 注意：如果这里不配置关联打印位置，该位置将不会记录日志 -->
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="FILE" />
	</root>
</configuration>

